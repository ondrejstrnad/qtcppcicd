name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]

defaults:
  run:
    shell: cmd
    
env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.5.2
  ARTIFACT:     example-build.zip
  
jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      matrix:
        os: [windows-latest]
        build_type: [Release]
        c_compiler: [cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl          
        
    steps:
    - uses: actions/checkout@v3

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.5.3
      with:
        version:      ${{ env.QT_VERSION }}
        host:         windows
        target:       desktop
        arch:         win64_msvc2019_64
        dir:          ${{ runner.temp }}
        modules:      qtcore
          
    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Move to dir
      run: |        
        dir        
        
    - name: "Create build directory and run CMake"
      run: cmake -S . -B build -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release
        
    - name: "Build Project" 
      run: cmake --build build --target all --config Release -- -j4 

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      # Execute tests defined by the CMake configuration. Note that --build-config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --build-config ${{ matrix.build_type }}
